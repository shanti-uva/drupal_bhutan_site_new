<!DOCTYPE html>
<html>
<head>
	<link REL="SHORTCUT ICON" HREF="UVALogo.ico">
	<title>Radial Menu Demo</title>
	<link rel="stylesheet" type="text/css" href="css/smoothness/jquery-ui-1.8.16.custom.css">
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js"></script>
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
	<style type="text/css">
		body { font-family:Verdana,Geneva,sans-serif; font-size:xx-small; }
		.commentBox { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:80px;border-radius:8px;
				  	 background-color:#eee;border:1px solid #ccc;
				  	 background:-moz-linear-gradient(top,#f0f0f0,#dfdfdf);
				  	 background:-webkit-linear-gradient(top, #f0f0f0 0%, #dfdfdf 100%);
				  	 box-shadow:3px 3px 8px #333;
					 position:absolute;left:20%;top:25%;width:60%;height:50%;
				  	 }
		.commentInnerBox { 
				  	 background-color:white;border:1px solid #666;
					 position:absolute;margin:8px;
				  	 }
		.commentBoxTitle { 
					 font-family:Verdana,Geneva,sans-serif; font-size:x-large;
					 text-align:center;font-weight:bold;				 
				  	 }


	</style>
</head>
<body>
<script>
	
	var menuCSS={ "background-color":"#006dcc", "border":".25px  black solid", left:"400px", top:"200px", width:"120px", color:"#fff", "font-weight":"bold", "font-size":"20px"};
	
	var testMenu={ lab:"Say",size:1, sub:[
					{ lab:"Comment",	size:.5, cb:function() { new DSC_Comment("comment","Mable said I think the point Jake makes here truly captures the essence of what Mr. Stake\'s perception is on the topic. What are some of the concerns he is bringing up in the discussion?",81,103);}},
					{ lab:"Feedback",	size:.5, sub:[
						{ lab:"Agree",	size:.5, cb:function() { alert("Agree+++"); }},
						{ lab:"Clarify",	size:.5, cb:function() { alert("Clarify???"); }},
						{ lab:"Off-topic",	size:.5, cb:function() { alert("Off Topic *&^"); }}
						]},
					{ lab:"Media",	size:.5, sub:[
						{ lab:"Document",	size:.5, cb:function() { alert("Document []"); }},
						{ lab:"Web page",	size:.5, cb:function() { alert("Web-page ()"); }},
						{ lab:"Video",		size:.5, cb:function() { alert("Video >>"); }}
						]},
					{ lab:"Draw",		size:.5, sub:[
						{ lab:"White board",	size:.5, cb:function() { alert("Whiteboard!"); }},
						{ lab:"Concept map",	size:.5, cb:function() { alert("Concept map!"); }}
						]}
				]
				 };

	$(document).ready(function() {
		new DSC_RadialMenu("",menuCSS,testMenu);
	});


////////////////////////////////////////////////////////////////////////////////////////////////////////////
//   COMMENT
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
function DSC_Comment(type, text, selStart, selEnd)
{
	this.type=type;															// Type of comment
	this.text=text;															// Text of comment
	this.selStart=selStart;													// Selection start		
	this.selEnd=selEnd;														// Selection end		
	var dd="#DSCCommentDiv";												// Point at overall box
	$(dd).remove();															// Remove old one, if there
	var str="<div id='"+dd.substr(1)+"' class='commentBox'/>";				// Add comment box
	$("body").append(str);													// Add menu div to body
	$(dd).hide(0);															// Hide it at start
	var wid=$(dd).width()/2-16;												// Get width
	var hgt=$(dd).height()-16;												// Get height
	var str="<div id='"+dd.substr(1)+"L' style='width:"+wid+"px;height:"+hgt+"px;' class='commentInnerBox' />";
	str+=   "<div id='"+dd.substr(1)+"R' style='left:"+(wid-0+12)+"px;width:"+(wid-16)+"px;height:"+(hgt-16)+"px;padding:8px' class='commentInnerBox' />";
	$(dd).append(str);														// Add menu div to body
	this.AddFrom();															// Add from info	
	this.AddComment();														// Add comment info	
	$(dd).show(800);														// Zoom it in
}

DSC_Comment.prototype.AddFrom=function() 								//	ADD FROM
{
	var _this=this;															// Temporary this
	var dd="#DSCCommentDivR";												// Point at box div
	var wid=$(dd).width()-22;												// Get width
	var hgt=$(dd).height()-78;												// Get height
	var str="<p class='commentBoxTitle'>About</p>";							// Title
	str+="<p style='margin:8px'>"+this.text+"</p>";							// Add text
	str+="<p align='center' style='position:absolute;top:"+hgt+"px;width:"+(wid-0+22)+"px'>";										
	str+="<br/><br/><br/><br/><button id='dscCommentCancel'>Cancel</button></p>";	// Quit button									
	$(dd).html(str);														// Add content
	$("#dscCommentCancel").click( function() { _this.Post("",""); });		// Handle button click
}

DSC_Comment.prototype.AddComment=function() 							//	ADD COMMENT MECHANISM
{
	var _this=this;															// Temporary this
	var dd="#DSCCommentDivL";												// Point at box div
	var str="<p class='commentBoxTitle'>I say</p>";							// Title
	var wid=$(dd).width()-22;												// Get width
	var hgt=$(dd).height()-78;												// Get height
	str+="<textarea id='dscCommentResp' style='margin:8px;width:"+wid+"px;height:50%'/>";		// Add textarea
	str+="<p align='center' style='position:absolute;top:"+hgt+"px;width:"+(wid-0+22)+"px'>";										
	str+="<input type='radio' name='dscCommentType' id='dscCommentType1' value='comment' checked='checked'/>Comment ";
	str+="<input type='radio' name='dscCommentType' id='dscCommentType2' value='expansion' />Expansion ";
	str+="<input type='radio' name='dscCommentType' id='dscCommentType3' value='question' />Question<br/><br/>";
	str+="<button id='dscCommentAdd'>Add to dscourse</button>";
	str+="</p>";
	$(dd).html(str);														// Add content
	$("#dscCommentAdd").click( function() { 
		var type="comment";													// Assume 1st
		if ($("#dscCommentType2").attr("checked"))	type="expansion";		// Try
		else if ($("#dscCommentTyp3").attr("checked"))	type="question";	// others
		_this.Post($('#dscCommentResp').val(),type) });						// Handle button click
}

DSC_Comment.prototype.Post=function(comment, type) 						//	POST COMMENT
{
	var dd="#DSCCommentDiv";												// Point at overall box
	if (comment) {															// If adding
		alert("Added "+type+": "+comment)									// Post it to db
		this.Sound("ding");													// OK
		}
	else
		this.Sound("delete");												// OK
	$(dd).hide(400,function() {$(dd).remove()});							// Hide it, then remove it
}

DSC_Comment.prototype.Sound=function(sound)
{	
	var clickSound=new Audio(sound+".mp3");
	if (!clickSound.canPlayType("audio/mpeg"))
		clickSound=new Audio(sound+".ogg");
	clickSound.play();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
//   RADIAL MENU  
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
function DSC_RadialMenu(container, format, data)						// CONSTRUCTOR
{
	var i;
	this.data=data;															// Set menu structure
	this.format=format;														// Set menu formatting
	this.container="#"+container;											// Container that hold menu
	this.cx=format.left.replace(/px/,"");									// Center x
	this.cy=format.top.replace(/px/,"");									// Center y
	this.rad=format.width.replace(/px/,"")/2;								// Radius
	if (!container)															// If no container defined
		this.container="body";												// Append to body
	$("#DSCMenuDiv").remove();												// Remove old one, if there
	var str="<div id='DSCMenuDiv' style='position:absolute;left:"+this.cx+"px;top:"+this.cy+"px'/>";
	$(this.container).append(str);											// Add menu div to container
	if (data)																// If a structure defined
		this.Draw(this.data,0,0,0);											// Draw it via recursion
	var thisObj=this;														// Point to this		
	
	for (i=1;i<=data.sub.length;++i) {										// For each submenu
		$("#DSCDotDiv-"+(100*i)).mouseover(function(e) {					// Over sub dot
			for (var j=1;j<=data.sub.length;++j)							// For each submenu
				thisObj.Color(100*j,(this.id.substr(10) != 100*j));			// Grey all other buttons
			thisObj.ShowSub(this.id.substr(10));							// Show sub-submenu
			});
		}	

	$("#DSCDotDiv-0").mouseover(function(e) {								// Over main dot
		thisObj.Init("first");												// Show first level
		});

	$("#DSCDotDiv-0").click(function(e) {									// Click on main dot
			thisObj.Init("close");											// Close all
		});

	$("#DSCDotDiv-0").hide();												// First dot is closed
	this.Init("open");														// Init with main dot showing
}

DSC_RadialMenu.prototype.Init=function(mode) 							//	INIT BUTTON STATE
{
	var i;
	var thisObj=this;														// Point to this		
	var data=this.data;														// Point to data
	for (i=1;i<=this.data.sub.length;++i) {									// For each submenu
		$("#DSCTreeDiv-"+(100*i)).hide();									// Hide trees	
		thisObj.Color(100*i,false);											// All buttons colored
		if (mode == "first")												// If showing 1st level
			$("#DSCDotDiv-"+(100*i)).fadeIn(1000);							// Show them	
		else																// Hiding everything
			$("#DSCDotDiv-"+(100*i)).hide();								// Hide them	
		if (data.sub[i-1].sub) {											// If sub-submenus
			for (j=1;j<=data.sub[i-1].sub.length;++j)						// For each sub-submenu
				$("#DSCDotDiv-"+((100*i)+j)).hide();						// Hide them	
			}
		}
	if (mode == "open")														// If opening
		$("#DSCDotDiv-0").show(1000);										// Zoom in
	else if (mode == "close")												// If closing
		$("#DSCDotDiv-0").hide(1000);										// Hide them	
}

DSC_RadialMenu.prototype.ShowSub=function(id) 							//	SHOW SUB-SUBMENU
{
	var i,j;
	for (i=1;i<=this.data.sub.length;++i) {									// For each submenu
		if (this.data.sub[i-1].sub) {										// If sub-submenus
			if (Math.floor(id/100) == i)									// If the selected one
				$("#DSCTreeDiv-"+(100*i)).fadeIn(0);						// Show them
			else															// Others
				$("#DSCTreeDiv-"+(100*i)).hide();							// Hide them	
			for (j=1;j<=this.data.sub[i-1].sub.length;++j) {				// For each sub-submenu
				if (Math.floor(id/100) == i)								// If the selected one
					$("#DSCDotDiv-"+((100*i)+j)).fadeIn(0);					// Show them
				else														// Others
					$("#DSCDotDiv-"+((100*i)+j)).hide();					// Hide them	
				}
			}
		}
}

DSC_RadialMenu.prototype.Color=function(id, gray) 						//	COLOR DOT
{
	var o=$("#DSCDotDiv-"+id);												// ID of base dot
	if (gray)																// If graying it
		o.css({border:"solid 1px #ddd",										// Gray rim
		background:"#eee",													// Gray interior
		"text-shadow":"0 0px 0px"											// No shadow
		});
	else{																	// Colored dot
		background:this.format["background-color"],
		o.css({border:"solid 1px "+this.format["background-color"],			// Gradient
		"text-shadow":"0 1px 1px rgba(0,0,0,.5)",
		});
		if ($.mozilla)												
			o.css("background","-moz-linear-gradient(top,#7db9e8,#1e5799)");
		else 
			o.css("background","-webkit-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,#7db9e8 100%)")
		}
}

DSC_RadialMenu.prototype.Draw=function(dat, x, y, id) 					//	DRAW DOT
{
	var i,j;
	if (!dat)																// No data
		return;																// Quit
	var thisObj=this;														// Point to this		
	var r=this.rad*dat.size;												// Scaled radius	
	var fs=this.format["font-size"].replace(/px/,"")*dat.size;				// Scaled font size										
	var str="<div id='DSCDotDiv-"+id+"' style='position:absolute;text-align:center'>";		// Div start
	str+=dat.lab+"</div>";													// Add label and end div
	$("#DSCMenuDiv").append(str);											// Add menu div
	$("#DSCDotDiv-"+id).mouseover(function(){$(this).css("color","yellow") });	
	$("#DSCDotDiv-"+id).mouseout(function(){$(this).css("color","white") });	
	var o=$("#DSCDotDiv-"+id);												// ID of base dot
	o.css(this.format);														// Set format
	var x1=x-r;			var y1=y-r;											// Position											
	if (id%100) {															// If 2nd selector
		o.css({"border-radius":"8px","moz-border-radius":"8px"});			// Set corners to make circle
		o.css("font-size",fs+"px");											// Adjust font size
		o.css({ width:(r*3)+"px",height:r/2+"px"});							// Set size
		}
	else{
		o.css({ width:(r+r)+"px",height:(r+r)+"px"});						// Set size
		o.css({"border-radius":r+"px","moz-border-radius":r+"px"});			// Set corners to make circle
		o.css("line-height",(r+r)+"px");									// Center vertically
		}
	o.css({border:"solid 1px "+this.format["background-color"],				// Gradient
		background:this.format["background-color"],
		"text-shadow":"0 1px 1px rgba(0,0,0,.5)",
		"box-shadow":"0 4px 8px rgba(0,0,0,.3)",
		});
	if ($.mozilla)	
		o.css("background","-moz-linear-gradient(top,#7db9e8,#1e5799)");
	else 
		o.css("background","-webkit-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,#7db9e8 100%)")
	o.css({left:x1+"px",top:y1+"px"});										// Set position
	if (id == 0)															// If main dot
		o.css("font-size",fs*2+"px");										// Double font size
	else																	// A sub dor=t
		o.css("font-size",fs+"px");											// Adjust font size
	if ((dat.sub) && (id == 0)) {											// If first ring of sub menus												
		var d=Number(r+(r/2)+12);											// Diameter
		var a=-(Math.PI/2);													// Start at top (radians)
		var step=(2*Math.PI)/(Math.PI*2*d/(r+24));							// Step size
		for (i=1;i<=dat.sub.length;++i)	{									// For each sub menu
			x1=x+d*Math.cos(a);			y1=x+d*Math.sin(a);					// Circle around
			a+=step;														// Next angle
			this.Draw(dat.sub[i-1],x1,y1,(100*i));							// Draw it recursively
			}
		}	
	else if ((dat.sub) && (id != 0)) {										// If 2nd ring of sub menus												
		x1=(r*6.5);															// To the right
		y1=(dat.sub.length-3)*r/-2;								
		var base="<div style='position:absolute;background-color:"+this.format["background-color"]+";";	
		$("#DSCDotDiv-"+id).append("<div id='DSCTreeDiv-"+id+"' style='position:absolute;top:0px'/>");
		str=base+"left:"+(r+r)+"px;top:"+r+"px;height:3px;width:"+(x1-r-r-12-x)+"px'/>";
		$("#DSCTreeDiv-"+id).append(str);									// Add first line
		str=base+"left:"+(x1-12-x)+"px;top:"+y1+"px;width:3px;height:"+((dat.sub.length-1)*r)+"px'/>";
		$("#DSCTreeDiv-"+id).append(str);									// Add first line

		for (j=0;j<dat.sub.length;++j)	{									// For each sub menu
			str=base+"left:"+(x1-12-x)+"px;top:"+y1+"px;height:3px;width:12px'/>";
			$("#DSCTreeDiv-"+id).append(str);								// Add it
			y1+=r;															// Advance down
			}
		$("#DSCTreeDiv-"+id).hide();										// Hide dot
		y1=y-((dat.sub.length*r)/2)+r+fs;									// Top
		for (j=0;j<dat.sub.length;++j)	{									// For each sub menu
			this.Draw(dat.sub[j],x1,y1,(id+(j+1)));							// Draw it recursively
			str=base+"left:"+(x1-12)+"px;top:"+(j*r)+"px;height:3px;width:12px'/>";
			y1+=r;															// Stack vertically
			}
		}

	$("#DSCDotDiv-"+id).hide();												// Hide dot
	dat=this.data;															// Point at data set
	
	$("#DSCDotDiv-"+id).click(function(e) {									// Click on main dot
		var a=Math.floor((this.id.substr(10)/100))-1;						// First layer		
		if (a < 0)															// First dot
			return;															// Quit
		var b=(this.id.substr(10)%100)-1;									// Second layer		
		if ((b < 0) && (dat.sub[a].cb))										// First level dot w/ cb
			dat.sub[a].cb();												// Run callback
		else if ((b != -1) && (dat.sub[a].sub[b].cb))						// 2nd level dot w/ cb
			dat.sub[a].sub[b].cb();											// Run callback
			thisObj.Init("close");											// Close all
		});
}

function trace(str) { console.log(str) };
	
	
</script>
</body></html>