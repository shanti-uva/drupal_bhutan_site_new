<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="UVALogo.ico" />
	<title>SHIVA Network</title>
	<link rel="stylesheet" type="text/css" href="css/smoothness/jquery-ui-1.8.16.custom.css">
	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js"></script>
	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
	<script type="text/javascript" src='//www.google.com/jsapi?autoload={"modules":[{"name":"visualization","version":"1"}]}&key=ABQIAAAAEl4MfDNmnJSmqRhM62lbSRS93451SmbvrhkJBfqEgIbRBj1mFRQana4GQi4rloCfm0x58Iu8rx_fVw'></script>
	<script type="text/javascript" src="shivalib-min.js?version=2017-03-07-v1"></script>
	<script type="text/javascript" src="jit-yc.js"></script>
	<style type="text/css">
		body { font-family:Verdana,Geneva,sans-serif; font-size:xx-small; }
		p.pb { text-align:right; color:#999999; }
		.rounded-corners { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;}
		tr.odd { background-color:#e0e0e0; }
		.propTable { background-color:#eee;border-radius:8px;
				  	 background:-moz-linear-gradient(top,#f0f0f0,#dfdfdf);
				  	 background:-webkit-linear-gradient(top, #f0f0f0 0%, #dfdfdf 100%);
				  	 border-collapse: collapse;
				  	 width:278px;
				  	 }
	</style>
</head>
<body>
	<div style="width:279px;position:absolute;top:0px;left:0px">		
		<p><select id="chartType" onchange="ChangeChart(this.value)">
			<option value="rgraph">Radial Graph</option>
			<option value="forcedir">Force Directed</option>
			<option value="hypertree">Hyper Tree</option>
		</select></p>
		<table id="propertyTable" class="propTable">
			<tr style="height:8px"><td> </td></tr>
		</table> 
		<p style="text-align:right">
			<img src='annotate.gif' style='vertical-align:bottom' alt='Annotate' onclick='shivaLib.Annotate()'>
			<span id='saveAsDiv'></span>
		</p>		
		<div id="helpDiv"> </div>
		<div id="outputDiv" style="width:460px"> </div>
	</div>
	<div id="containerDiv" style="width:600px;height:500px;position:absolute;top:40px;left:308px"> </div>

<script>

	///////// GLOBALS   //////////
	
	var shivaLib=null;
	var jv=null;
	var shivaGroup="Network";
	var items=new Array(); 
	var chartType="rgraph";
	var props=null;
	var props={
		rgraph:{
			dataSourceUrl: 				{	def:'https://docs.google.com/spreadsheet/pub?key=0AtzYXVRFwsAMdHh1MnBpZnhHSjVSNFAtY0hZUG5MYmc&output=txt', 		opt:'string',		 des:'Data source URL'}, 
			height: 					{	def:'800', 		opt:'number',		 des:'Height'},
			width: 						{	def:'800', 		opt:'number',		 des:'Width'},
			background_CanvasStyles_strokeStyle: {	def:'555555', 		opt:'color',		 des:'Background ring color'},
			background_CanvasStyles_fillStyle: {	def:'000000', 		opt:'color',		 des:'Background color'},
			Navigation_zooming: 		{	def:'100', 		opt:'number',		 des:'Zoom speed'},
			Node_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use node styles from data source'},
			Node_type: 					{	def:'circle', 	opt:'circle|square|triangle|star',		 des:'Node shape'},
			Node_dim:					{	def:'5', 		opt:'number',		 des:'Node size'},
			Node_color:					{	def:'ff0066', 	opt:'color',		 des:'Node color'},
			Edge_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use edge styles from data source'},
			Edge_type:					{	def:'line', 	opt:'line|arrow',	 des:'Link style'},
			Edge_dim:					{	def:'15', 		opt:'number',		 des:'Link arrow head size'},
			Edge_color: 				{	def:'777777', 	opt:'color',		 des:'Link color'},
			Edge_lineWidth:				{	def:'2', 		opt:'number',		 des:'Link line width'},
			Label_style: 				{	def:'normal', 	opt:'normal|italic|bold',		 des:'Font style'},
			Label_size: 				{	def:'14', 		opt:'number',		 des:'Font size'},
			Label_color: 				{	def:'ffff33', 	opt:'color',		 des:'Font color'},
			Label_family: 				{	def:'sans-serif', opt:'sans-serif|serif|monospace',		 des:'Font family'},
			ud: 						{	def:'false', 	opt:'true|false',	 des:'Enable user draw?'}}, 
		forcedir:{
			dataSourceUrl: 				{	def:'https://docs.google.com/spreadsheet/pub?key=0AtzYXVRFwsAMdHh1MnBpZnhHSjVSNFAtY0hZUG5MYmc&output=txt', 		opt:'string',		 des:'Data source URL'}, 
			height: 					{	def:'800', 		opt:'number',		 des:'Height'},
			width: 						{	def:'800', 		opt:'number',		 des:'Width'},
			background_CanvasStyles_fillStyle: {	def:'000000', 		opt:'color',		 des:'Background color'},
			Navigation_zooming: 		{	def:'100', 		opt:'number',		 des:'Zoom speed'},
			Node_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use node styles from data source'},
			Node_type: 					{	def:'circle', 	opt:'circle|square|triangle|star',		 des:'Node shape'},
			Node_dim:					{	def:'5', 		opt:'number',		 des:'Node size'},
			Node_color:					{	def:'ff0066', 	opt:'color',		 des:'Node color'},
			Edge_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use edge styles from data source'},
			Edge_dim:					{	def:'15', 		opt:'number',		 des:'Link arrow head size'},
			Edge_type:					{	def:'line', 	opt:'line|arrow',	 des:'Link style'},
			Edge_color: 				{	def:'777777', 	opt:'color',		 des:'Link color'},
			Edge_lineWidth:				{	def:'2', 		opt:'number',		 des:'Link line width'},
			Label_style: 				{	def:'normal', 		opt:'normal|italic|bold',		 des:'Font style'},
			Label_size: 				{	def:'14', 		opt:'number',		 des:'Font size'},
			Label_color: 				{	def:'ffff33', 	opt:'color',		 des:'Font color'},
			Label_family: 				{	def:'sans-serif', opt:'sans-serif|serif|monospace',		 des:'Font family'},
			ud: 						{	def:'false', 	opt:'true|false',	 des:'Enable user draw?'}}, 
		hypertree:{
			dataSourceUrl: 				{	def:'https://docs.google.com/spreadsheet/pub?key=0AtzYXVRFwsAMdHh1MnBpZnhHSjVSNFAtY0hZUG5MYmc&output=txt', 		opt:'string',		 des:'Data source URL'}, 
			height: 					{	def:'800', 		opt:'number',		 des:'Height'},
			width: 						{	def:'800', 		opt:'number',		 des:'Width'},
			background_CanvasStyles_fillStyle: {	def:'000000', 		opt:'color',		 des:'Background color'},
			Navigation_zooming: 		{	def:'100', 		opt:'number',		 des:'Zoom speed'},
			Node_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use node styles from data source'},
			Edge_dim:					{	def:'15', 		opt:'number',		 des:'Link arrow head size'},
			Node_type: 					{	def:'circle', 	opt:'circle|square|triangle|star',		 des:'Node shape'},
			Node_dim:					{	def:'5', 		opt:'number',		 des:'Node size'},
			Node_color:					{	def:'ff0066', 	opt:'color',		 des:'Node color'},
			Node_transform:				{	def:'true', 	opt:'false|true',	 des:'Node transform'},
			Edge_overridable: 			{	def:'true', 	opt:'false|true',	 des:'Use edge styles from data source'},
			Edge_type:					{	def:'hyperline', opt:'hyperline|line|arrow',	 des:'Link style'},
			Edge_color: 				{	def:'777777', 	opt:'color',		 des:'Link color'},
			Edge_lineWidth:				{	def:'2', 		opt:'number',		 des:'Link line width'},
			Label_style: 				{	def:'normal', 	opt:'normal|italic|bold',		 des:'Font style'},
			Label_size: 				{	def:'14', 		opt:'number',		 des:'Font size'},
			Label_color: 				{	def:'ffff33', 	opt:'color',		 des:'Font color'},
			Label_family: 				{	def:'sans-serif', opt:'sans-serif|serif|monospace',		 des:'Font family'},
			ud: 						{	def:'false', 	opt:'true|false',	 des:'Enable user draw?'}} 
		};
		
	var helpText=new Array();
	helpText['Data source URL']="Click on the spreadsheet icon to the right of 'Data source url' to access a list of your Google Docs Spreadsheets from within SHIVA. You may be prompted to authorize access (read-only) to your Google account. You should then be able to select a spreadsheet from the provided list.<br/> <br/>Alternately, you can paste the URL provided through the Share link of your Google Doc. Note you have to change the Share settings for the Spreadsheet to either 'Public' or 'Anyone with the link'. <br/><br/>See <a href='https://wiki.shanti.virginia.edu/x/o5S1AQ' target='_blank'>the Knowledge Base</a> for more information about how to create and link to network data for use in these visualizations.";
	helpText['Height']="Enter a value in the text box to the right to set the height of the visualization.";
	helpText['Width']="Enter a value in the text box to the right to set the width of the visualization.";
	helpText['Level distance']="The distance between levels, or circles, in pixels.";
	helpText['Zoom speed']="In the text box to the right enter a value that will determine the zoom sensitivity of the scrollwheel. Higher values will increase the zoom speed, and lower values will decrease the zoom speed. Enter a value 0 to 500; note a value of 0 disables zooming.";
	helpText['Background ring color']="In the text box to the right enter a color value that will set the color of the concentric rings in the background of the visualization. Click on the square color chip icon in the text box to the right to launch the color picker and select a color, or type a hexadecimal color value in the text box.";
	helpText['Background color']="In the text box to the right enter a color value that will set the color of the background of the visualization. Click on the square color chip icon in the text box to the right to launch the color picker and select a color, or type a hexadecimal color value in the text box.";
	helpText['Use node styles from data source']="Use the drop-down menu to the right to choose whether or not to use the node style information specified in your source spreadsheet, or to set the node style using the options below.";
	helpText['Node size']="In the text box to the right enter a value that sets the default radius or height of each node.";
	helpText['Node shape']="Use the drop-down menu to the right to set the default shape of each node.";
	helpText['Node color']="In the text box to the right enter a value that sets the default node color. Either click on the square color chip icon to launch the color picker and select a color, or type a hexadecimal color code in the text box.";
	helpText['Node alpha']="The default alpha, or transparency, setting of each node. Set to some decimal value between 0 and 1, where 1 is opaque and 0 completely transparent.";
	helpText['Link arrow head size']="In the text box to the right enter a value that sets the default size of link arrow heads. Note this only applies if the 'Link style' option is set to 'arrow'.";
	helpText['Node transform']="Use the drop-down menu to right to choose whether to resize nodes based on their position relative to the center. Note this only applies if you choose not to specify style data in your source spreadsheet.";
	helpText['Use edge styles from data source']="Use the drop-down menu to the right to choose whether or not to use the link style information specified in your source spreadsheet, or to set the linknode style using the options below.";
	helpText['Link color']="In the text box to the right enter a value that sets the default color of link lines. Either click on the square color chip icon to launch the color picker and select a color, or type a hexadecimal color code in the text box.";
	helpText['Link line width']="In the text box to the right enter a value that sets the default link line width in pixels.";
	helpText['Link style']="Use the drop-down menu to the right to choose the default type or style of link, including 'line,' 'hyperline,' and 'arrow'.  The options and default might vary in each visualization.";
	helpText['Link arrow head size']="The default size of the edge arrow head, when using the 'Link style' 'arrow'.";
	helpText['Font style']="Use the drop-down menu to the right to choose the the style of the font label. Choose 'normal', 'italic' or 'bold'";
	helpText['Font size']="Click on the text box to the right and enter a number that sets the font size of node labels in pixels.";
	helpText['Font color']="In the text box to the right enter a value that will determine the font color of node labels. Either click on the square color chip icon in the text box to the right to launch the color picker and select a color, or enter a hexadecimal color code in the text box.";
	helpText['Font family']="Use the drop-down menu to the right to choose the font-family for node labels. Choose 'sans-serif', 'serif', or 'monospace'";
	
	///////// INIT  /////////////
	
	$(document).ready(function() 
	{
		shivaLib=new SHIVA_Show("containerDiv");		
		shivaLib.drupalMan=(""+window.location).match(/pr=d/);
		ReEdit();
		ShowHelp("startup");
		if (window.addEventListener) {
			window.addEventListener("message",shivaEventHandler,false);
			} 
		else
			window.attachEvent("message",shivaEventHandler);
		if (!shivaLib.drupalMan) {
			var str="&nbsp;&nbsp;Share as: <select id='formatter' onChange='SaveData(this.value)'>";
			str+="<option>Choose format</option>";
			str+="<option>WordPress</option>";
			str+="<option>eStore</option>";
			str+="<option>iFrame</option>";
			str+="<option>JSON</option>";
			str+="<option>Web-page</option>";
			str+="</select>"; 
			$("#saveAsDiv").html(str);
			}
	});

	function shivaEventHandler(e)
	{
		if (e.data.indexOf("GetJSON") == 0) 
			e.source.postMessage("GetJSON="+SaveData("GetJSON"),"*");
		else if (e.data.indexOf("GetWebPage") == 0) 
			e.source.postMessage("GetWebPage="+SaveData("Web-page"),"*");
		else if (e.data.indexOf("GetWordPress") == 0) 
			e.source.postMessage("GetWordPress="+SaveData("WordPress"),"*");
		else if (e.data.indexOf("GetType") == 0) 
			e.source.postMessage("GetType="+shivaGroup,"*");
		else if (e.data.indexOf("PutJSON") == 0) 
			ReEdit($.parseJSON(e.data.substr(8)));
	}

	function Draw(mode) 
	{
		if (shivaLib.drupalMan)
			window.parent.postMessage("DataChanged=true","*");
		shivaLib.Draw($.parseJSON(SaveData("GetJSON")));
	}

	function SaveData(mode) 
	{
		return shivaLib.SaveData(mode,shivaGroup,null,props[chartType],chartType);
	}	

    function ReEdit(jsonData) 
    {
        if (jsonData) {
            if (jsonData.chartType)
                chartType=jsonData.chartType;
            }
        else{
            var s,e;
            var query=window.location.search.substring(1);
            if ((s=query.indexOf("&chartType=")) != -1)
                if ((e=query.indexOf("&",s+1)) != -1)
                    chartType=query.substring(s+11,e);
            }
        SetAttributes(chartType,false);
        shivaLib.ReEdit(jsonData,props[chartType]);
        $("#chartType option").each(function() {
          optval = $(this).val();
      if (optval == chartType) {
          chartType=optval;
          $("select#chartType").val(chartType);
        }
    });
    chartType=chartType.replace(/ /g,"");
        Draw();
	}
	
	function ChangeChart(type)
	{
		if (shivaLib.drupalMan)
			window.parent.postMessage("ChartChanged="+type,"*");
		SetAttributes(type,true);	
	}

	function ShowHelp(att) 
	{
		if (att == "startup")
			$("#helpDiv").html("<br/><p class='pb'>Powered by JavaScript InfoVis Toolkit<br/><br/>Built by SHANTI<br/>The University of Virginia</p>");
		else
			shivaLib.ShowHelp(att,helpText);
	}	

	function SetAttributes(type, drawIt)
	{
		chartType=type.replace(/ /g,"");			
		ShowHelp("");
		shivaLib.SetAttributes(props[chartType]);
		if (drawIt)
			Draw();
	}	

	function trace(str) 
	{ 
		console.log(str);
	}
		
</script>
</body>
</html>
