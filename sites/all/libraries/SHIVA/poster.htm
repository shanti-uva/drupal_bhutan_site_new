<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="UVALogo.ico">
	<title>SHIVA Poster</title>
	<link rel="stylesheet" type="text/css" href="css/smoothness/jquery-ui-1.8.16.custom.css">
 	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js"></script>
	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
  	<script type="text/javascript" src="shivalib-min.js?version=2017-03-07-v1"></script>
  	<script type="text/javascript" src="shivalib_poster.js"></script>
	<script type="text/javascript" src='//www.google.com/jsapi?autoload={"modules":[{"name":"visualization","version":"1"}]}'></script>
	<style type="text/css">
		body { font-family:Verdana,Geneva,sans-serif; font-size:xx-small; }
		p.pb { text-align:right; color:#999999; }
		. { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;}
		tr.odd { background-color:#e0e0e0; }
		.rounded-corners { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;}
		.propTable { background-color:#eee;border-radius:8px;
				  	 background:-moz-linear-gradient(top,#f0f0f0,#dfdfdf);
				  	 background:-webkit-linear-gradient(top, #f0f0f0 0%, #dfdfdf 100%);
				  	 border-collapse: collapse;
				  	 }
  </style>
</head>
<body style="'background:none transparent">
	<div style="width:279px;position:absolute;top:0px;left:0px">
 		<div style="text-align:center">
 		<span id="controlbar" style="font-size:xx-small">
		<input type='radio' id='cb1' onclick='SetMode("Edit")' name='mainMen' checked='checked' /><label for='cb1'>Edit</label>
		<input type='radio' id='cb2' onclick='SetMode("Connect")' name='mainMen'/><label for='cb2'>Connect</label>
		<input type='radio' id='cb3' onclick='SetMode("View")' name='mainMen'/><label for='cb3'>View</label></span>
		</div><br/><br/>
	
    <table id="propertyTable" class="propTable">
		<tr style="height:8px"><td> </td></tr>
	</table> 
   <p style="text-align:right"><span style="vertical-align:50%">Poster panes </span><span id="toolbar" style="font-size:medium">
		<button type='button' id='tb1' onclick='ShiftItem(-1)'> </button>
		<button type='button' id='tb2' onclick='ShiftItem(1)'> </button>
		<button type='button' id='tb3' onclick='RemoveItem()'> </button>
		<button type='button' id='tb4' onclick='AddNewItem()'> </button>
	</span></p>
	<p style="text-align:right"><img src='annotate.gif' style='vertical-align:bottom' alt='Annotate' onclick='shivaLib.Annotate()'>
		<span id='saveAsDiv'></span>
	<span><br/><br/><a onclick='ShowSample()'><i>Click <u>here</u> to add Poster sample</i></a></span>
		</p>		
 	<div id="helpDiv"> </div>
	<div id="outputDiv" style="width:460px"> </div>
	</div>
	<div id="containerDiv" style="position:absolute;top:0px;left:308px;height:600px;width:800px;"> </div>
 
<script>

///////// GLOBALS   //////////

	var items=new Array();
	var shivaLib=null;
	var shivaGroup="Poster"
	
	var props={
		pos: 						{	def:'2000|250|250', opt:'hidden',			des:'data'},
		eva: 						{	def:'', 			opt:'hidden',			des:'data'},
		height: 					{	def:'600', 			opt:'number',			des:'Height of poster'},
		width: 						{	def:'900', 			opt:'number',			des:'Width of poster'}, 
		backCol: 					{	def:'eeeeee', 		opt:'color',			des:'Background color'}, 
		dataSourceUrl: 				{	def:'http://www.viseyes.org/shiva/map.jpg', opt:'string',	des:'Background image'}, 
		overview: 					{	def:'true', 		opt:'true|false',		des:'Show overview?'},
		grid: 						{	def:'false', 		opt:'true|false',		des:'Show placement grid?'},
		controlbox: 				{	def:'false', 		opt:'true|false',		des:'Show controlbox?'}, 
		ud: 						{	def:'false', 		opt:'true|false',		des:'Enable user draw?'},
		item: 						{	def:'None', 		opt:'None|',			des:'<b>Choose pane to edit</b>'}, 
		data: 						{	def:'', 			opt:'hidden',			des:'data'},
		asp: 						{	def:'', 			opt:'hidden',			des:'aapect'},
		url: 						{	def:'', 			opt:'string',			des:'URL or ID of pane'}, 
		layerTitle: 				{	def:'', 			opt:'string',			des:'Control box label'}, 
		scrollbars: 				{	def:'false', 		opt:'true|false',		des:'Show scroll bars?'}, 
		drag: 						{	def:'false', 		opt:'true|false',		des:'Make it draggable?'}, 
		caption: 					{	def:'', 			opt:'string',			des:'Caption'}, 
		style: 						{	def:'border:3px solid white', opt:'string',	des:'CSS styling'}
	}
	
	var helpText=new Array();
	helpText['Height of poster']="The height of the player box where the montage will play in";
	helpText['Width of poster']="The width of the player box where the montage will play in";
	helpText['Enable user draw?']="Use the drop-down menu to the right to toggle whether or not users can interactively draw on your visualization. Note these drawings are for users only and are not saved with the visualization. In order to draw users will need to click on the pencil icon in the bottom left of your visualization.";
	helpText['URL or ID of pane']="The URL of the pane to add to the poster. Alternatively, you can simply put in the eStore number for the SHIVA element.";
	helpText['Show placement grid?']="Show grid to help align panes.";
	helpText['Background color']="Use the text box to the right to set the background color for the poster. Either click on the square color chip icon in the text box to launch the color picker and select a color, or enter a hexadecimal color value directly into the text box.";
	helpText['Show Overview?']="Whether or not to add a small icon at the bottom right of your poster. Clicking this icon will will show or hide a small mini-poser at the bottom right corner of the poster; this mini-poster allows easy navigation through the poster.";
	helpText['Show controlbox?']="Use the drop-down menu to the right to choose whether to show or hide the control box from your poster. The control box allows users to interactively got to specific areas in your poster.";
	helpText['Background image']="Use the text box to enter the full url of an image file thst completely covers the poster.<br/><br/>Make sure it is the same shape as poster's overall height and width.<br/><br/>The image needs to have enough resolution to handle the degree in which you want to allow zooming in.";
	helpText['Control box label']="Short label that will appear in the control box. If you do not provide a label, the pane will not appeear in the control box";
	helpText['Show scroll bars?']="Show controls bars on website and SHIVA viz's the are larger than the space provided for.";
	helpText['Make it draggable?']="Allo user to drag the pane when viewing.";
	helpText['Caption']="Caption that will appear underneath pane when viewed.";
	helpText['Height of poster']="The height of the player box where the montage will play in";
	helpText['OVERVIEW']="Samples:<br><br>375-Pie chart<br>390=Map<br>392-Earth<br>393-Montage<br>394-Video<br>395-Timeline<br>404-Sample poster<br>405-Word<br>406-Network<br><br>https://docs.google.com/spreadsheet/ccc?key=0AsMQEd_YoBWldFBoYjZfWkdSLVBkRTY2QTNDS2lWVWc&usp=drive_web#gid=0";
	
///// INIT  /////////////
	
	$(document).ready(function() {
  		shivaLib=new SHIVA_Show("containerDiv");
		shivaLib.drupalMan=(""+window.location).match(/pr=d/);
	  	SetAttributes(false);
		shivaLib.callback=Draw;
		shivaLib.posterMode="Edit";
		$("#controlbar").buttonset();
		$("#cb1").button({text: true, icons: { primary: "ui-icon-pencil"}});
		$("#cb2").button({text: true, icons: { primary: "ui-icon-shuffle"}});
		$("#cb3").button({text: true, icons: { primary: "ui-icon-image"}});
		$("#cb1").prop("checked","checked");
		$("#toolbar").buttonset();
		$("#tb1").button({text: false, icons: { primary: "ui-icon-arrowthick-1-n"}}).css("width","25");
		$("#tb2").button({text: false, icons: { primary: "ui-icon-arrowthick-1-s"}}).css("width","25");
		$("#tb3").button({text: false, icons: { primary: "ui-icon-trash"}}).css("width","25");
		$("#tb4").button({text: false, icons: { primary: "ui-icon-plus"}}).css("width","25");

		ReEdit();
		ShowHelp("startup");
		if (window.addEventListener) 
			window.addEventListener("message",shivaEventHandler,false);
		else
			window.attachEvent("message",shivaEventHandler);
  		if (!shivaLib.drupalMan) {
			var str="&nbsp;&nbsp;Share as: <select id='formatter' onChange='SaveData(this.value)'>";
			str+="<option>Choose format</option>";
			str+="<option>WordPress</option>";
			str+="<option>eStore</option>";
			str+="<option>iFrame</option>";
			str+="<option>JSON</option>";
			str+="<option>Web-page</option>";
			str+="</select>"; 
			$("#saveAsDiv").html(str);
			}
	});

	function SetMode(type)
	{
		shivaLib.posterMode=type;
		Draw();
	}

	function shivaEventHandler(e)
	{
		if (e.data.indexOf("GetJSON") == 0) 
			e.source.postMessage("GetJSON="+SaveData("GetJSON"),"*");
		else if (e.data.indexOf("GetWebPage") == 0) 
			e.source.postMessage("GetWebPage="+SaveData("Web-page"),"*");
		else if (e.data.indexOf("GetWordPress") == 0) 
			e.source.postMessage("GetWordPress="+SaveData("WordPress"),"*");
		else if (e.data.indexOf("GetType") == 0) 
			e.source.postMessage("GetType="+shivaGroup,"*");
		else if (e.data.indexOf("PutJSON") == 0) 
			ReEdit($.parseJSON(e.data.substr(8)));
	}

	function Draw(mode)
	{	
		if (shivaLib.drupalMan)
			window.parent.postMessage("DataChanged=true","*");
		if (shivaLib.posterMode == "Connect") 
			DrawConnections();
		else
			shivaLib.Draw($.parseJSON(SaveData("GetJSON")));
		for (var i=0;i<items.length;++i)
	  		if (items[i].layerTitle[i])
	  			$("#acctitle"+i).html("<b>Pane-"+(i+1)+"</b>&nbsp;<i> "+items[i].layerTitle+"</i>");
	}

	function SaveData(mode)
	{
		return shivaLib.SaveData(mode,shivaGroup,items,props);
	}	

	function ReEdit(jsonData)
	{
		SetAttributes(false);	
		var it=shivaLib.ReEdit(jsonData,props,false);
		if (it)
			items=it;
		SetAttributes(true);
		Draw();
	}

	function ShowHelp(att)
	{
		if (att == "startup") 
			$("#helpDiv").html("<br/><p class='pb'>Built by SHANTI<br/>The University of Virginia</p>");
		else
			shivaLib.ShowHelp(att,helpText);
	}	

	function SetAttributes(keep)
	{
		shivaLib.SetAttributes(props,items,keep);
	}	

///////// ITEMS  /////////////
	
	function AddNewItem()
	{
		var o=new Object;
		var s=0,i=0;
		shivaLib.Sound("ding");
		for (var key in props) {
			if (key == "item")
				s=i;
			++i;
			if (!s)
				continue;
			o[key]=props[key].def;
			}
		var scale=shivaLib.posterScale;
		for (var i=0;i<items.length;++i)
			items[i].name="Pane-"+(i+1);
		var cx=Math.round(shivaLib.posterX*1000)
		var cy=Math.round(shivaLib.posterY*1000)
		o.data=500/scale+"|"+cx+"|"+cy;
		$("#itemInput"+items.length-1+"-1").val(o.data)
		items.push(o);
		for (var i=0;i<items.length;++i)
			items[i].name="Pane-"+(i+1);
	  	SetAttributes(true);
		Draw();
		$("#accord").accordion({ active: items.length-1 });
	}	
	
	function RemoveItem()
	{
		var active=$("#accord").accordion("option","active");
		if (active === false)
			return;
		shivaLib.Sound("delete");
		items.splice(active,1);
		for (var i=0;i<items.length;++i) 
			items[i].name="Pane-"+(i+1);
	  	SetAttributes(true);
		Draw();
	}

	function ShiftItem(dir)
	{
		var cur=shivaLib.ShiftItem(dir,items);
		for (var i=0;i<items.length;++i) 
			items[i].name="Pane-"+(i+1);
	  	SetAttributes(true);
		if (cur != -1)
			$("#accord").accordion({ active: cur });
	}

	function ShowSample()
	{
		var data={
			"item-1": "name:Pane-1;data:239|245|180;url:375;layerTitle:Pie Chart;scrollbars:false;style:",
			"item-2": "name:Pane-2;data:148|843|191;url:401;layerTitle:MLK;scrollbars:false;style:border=3px solid white;caption:Martin Luther King Jr.",
			"item-3": "name:Pane-3;data:200|195|825;url:393;layerTitle:Movie;scrollbars:false;style:border=3px solid white;caption:Click to play movie",
			"item-4": "name:Pane-4;data:220|594|513;url:394;layerTitle:Video;scrollbars:false;style:",
			"pos": "1000|500|500",
			"height": "600",
			"width": "800",
			"backCol": "eeeeee",
			"dataSourceUrl": "http://www.viseyes.org/shiva/map.jpg",
			"overview": "true",
			"grid": "false",
			"controlbox": "true",
			"ud": "true",
			"shivaMod": "Wed, 22 May 2013",
			"shivaGroup": "Poster"
			}
		ReEdit(data);
	}

	function DrawPosterGrid()
	{
		if (shivaLib.options.grid != "true")
			return;
		var i,inc,str;
		var w=$("#posterDiv").width();
		var h=$("#posterDiv").height();
		if ($("#posterGridDiv").length == 0)
			$("#posterDiv").append("<div id='posterGridDiv'></div>");	
		$("#posterGridDiv").empty();
		var row="position:absolute;left:0px;width:"+w+"px;height:0px;border:1px dashed #333;opacity:.5;";
		var col="position:absolute;top:0px;height:"+h+"px;width:0px;border :1px dashed #333;opacity:.5;";
		inc=h/4;
		for (i=1;i<4;++i) {
			str="<div style='"+row+"top:"+(inc*i)+"px'></div>"
			$("#posterGridDiv").append(str);
			}
		inc=w/4;
		for (i=1;i<4;++i) {
			str="<div style='"+col+"left:"+(inc*i)+"px'></div>"
			$("#posterGridDiv").append(str);
			}
	}
	
	function DrawPosterOverviewGrid()
	{
		if (shivaLib.options.grid != "true")
			return;
		var i,inc,str;
		var w=$("#posterOverDiv").width();
		var h=$("#posterOverDiv").height();
		var row="position:absolute;left:0px;width:"+w+"px;height:0px;border:1px dashed;opacity:.3;";
		var col="position:absolute;top:0px;height:"+h+"px;width:0px;border:1px dashed;opacity:.3;";
		inc=h/4;
		for (i=1;i<4;++i) {
			str="<div style='"+row+"top:"+(inc*i)+"px'></div>"
			$("#posterOverDiv").append(str);
			}
		inc=w/4;
		for (i=1;i<4;++i) {
			str="<div style='"+col+"left:"+(inc*i)+"px'></div>"
			$("#posterOverDiv").append(str);
			}
	}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	CONNECT
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function onChangeEva()
{
	$("#propInput"+1).val(data);
	shivaLib.options.eva=data;
	$("#cb3").trigger("click");
}
		
function DrawConnections()												// DRAW PROXIES/LINES
{
	$("#posterOverDiv").remove();											// Remove overview
	shivaLib.DrawLayerControlBox(null,false);								// Hide control box
	$("#posterDiv").draggable("destroy");									// Diable dragging
	$("#posterDiv").css({"left":"0px","top":"0px"});						// Position poster	
	AddEntryLine("init");													// Put up button
}	

function AddEntryLine(mode)												// ADD NEW EVA LINE
{
	if (mode != "init")	{													// If not initting
		shivaLib.Sound("ding");												// Click
		shivaLib.eva.ondos.push( {on:"init",from:"",Do:"load",src:"",to:"",query:""} );	// Put dummy data
		}
	var str="<br/><div style='font-size:medium;text-shadow:1px 1px #ccc'><b>&nbsp;&nbsp;SHIVA Poster connections:</b></div><br/>";
	for (var i=0;i<shivaLib.eva.ondos.length;++i)							// For each ondo
		str+=CreateEntryLine(i);												// Draw line
	str+="<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<button onclick='AddEntryLine()'>Add new connection</button>";
	str+="&nbsp;&nbsp;&nbsp;<img style='vertical-align:-4px' src='helpicon.gif' title='Open help doc' "; 
	str+="onclick='window.open(\"https://docs.google.com/document/d/1mRJCbnhGRAHZApk5EUw-n1qZ4ku4vCiqdQT9rCILJ1s/edit?usp=sharing\",\"_blank\")'>";
	$("#posterDiv").html(str);												// Show menu
}

function CreateEntryLine(num)												// CREATE EBA ENTRY LINE
{
	var i,o,str,sel;
	var panes=["Poster"];													// Holds list of pane names
	var tables=[];															// Holds list of table names
	var scripts=[];															// Holds list of script names
	var ons=["starting","clicked","moved","ready","at time","played","paused","done","other"];	// List of possible ons
	var actions=["data","goto","hide","load","marker","pause","play","resize","show","time"];	// Holds list of action names

	for (i=1;i<=shivaLib.items.length;++i)									// For each pane
		panes.push("Pane-"+i)												// Add to list
	for (i=0;i<shivaLib.eva.ondos.length;++i) {								// For each ondo
		o=shivaLib.eva.ondos[i];											// Point at ondo
		if (((o.Do == "load") && (!o.src.match(/^[em]=/i))) || (o.Do == "filter")) // If loading data
			tables.push(o.to);												// Add to list
		}
	for (i=0;i<shivaLib.eva.ondos.length;++i) {								// For each ondo
		o=shivaLib.eva.ondos[i];											// Point at ondo
		if (o.Do == "script") 												// If a script
			scripts.push(o.to);												// Add to list
		}
	o=shivaLib.eva.ondos[num];												// Point at undo
	var str="<div id='evaLine"+num+"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;When ";	// Div start								
	str+=shivaLib.MakeSelect("fromSel"+num+"",false,panes,panes[o.from]," onchange='onEvaEntryChange(this.id)'",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);
	str+=" is ";	
	if (o.on == "init")				sel="starting";
	else if (o.on == "click")		sel="clicked";
	else if (o.on == "time")		sel="at time";
	else if (o.on == "move")		sel="moved";
	else if (o.on == "play")		sel="played";
	else if (o.on == "pause")		sel="paused";
	else if (o.on == "other") 												// If other
		o.on=prompt("Type SHIVA event to trigger on");						// Get new option
	else																	// Anything else						
		sel=o.on;															// Just select directly
	for (i=0;i<ons.length;++i)												// Look through ons		
		if (sel == ons[i])													// If a match
			break;															// Quit looking
	if (i == ons.length) {													// No match
		ons.splice(ons.length-1,0,o.on);									// Add to pulldown
		sel=o.on;															// Select directly
		}
	str+=shivaLib.MakeSelect("onSel"+num+"",false,ons,sel," onchange='onEvaEntryChange(this.id)'",["init","click","move","ready","time","play","pause"]);
	if (o.on == "time") {
		if (!o.p1)	o.p1="00:00";
		str+=" near <input id='pSel"+num+"' onchange='onEvaEntryChange(this.id)' type='input'size='4' style='text-align:center' value='"+o.p1+"'>";
		}
	str+=" then ";	
	str+=shivaLib.MakeSelect("DoSel"+num+"'",false,["load","fill","filter","tell","script","call"],o.Do," onchange='onEvaEntryChange(this.id)'");
	str+=" this ";	
	panes.shift();															// Remove poster from panes list
	if (o.Do == "load") {
		str+="<input id='srcSel"+num+"' onchange='onEvaEntryChange(this.id)' type='input'size='5' style='text-align:center' value='"+o.src+"'>";
		if (o.src) {														// If a src
			str+=" into ";	
			if (o.src.match(/^[em]=/i)) {									// If a pane src
				if (!o.to)	o.to=1;
				str+=shivaLib.MakeSelect("toSel"+num+"",false,panes,panes[o.to-1]," onchange='onEvaEntryChange(this.id)'",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);
				}
			else															// Must be a data source
				str+=" table named <input id='toSel"+num+"' onchange='onEvaEntryChange(this.id)' type='input'size='5' style='text-align:center' value='"+o.to+"'>";
			}
		}
	else if (o.Do == "fill") {
		if (!o.to)	o.to=1;
		str+=shivaLib.MakeSelect("toSel"+num+"",false,panes,panes[o.to-1]," onchange='onEvaEntryChange(this.id)'",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);
		str+=" from ";	
		if (!o.src && tables.length)	o.src=tables[0];
		str+=shivaLib.MakeSelect("srcSel"+num+"",false,tables,o.src," onchange='onEvaEntryChange(this.id)'");
		str+=" if ";	
		str+="<input id='querySel"+num+"' onchange='onEvaEntryChange(this.id)' type='input'size='10' style='text-align:center' value='"+o.query+"'>";
		}
	else if (o.Do == "filter") {
		if (!o.src && tables.length)	o.src=tables[0];
		str+=shivaLib.MakeSelect("srcSel"+num+"",false,tables,o.src," onchange='onEvaEntryChange(this.id)'");
		str+=" to ";	
		str+="<input id='toSel"+num+"' onchange='onEvaEntryChange(this.id)' type='input'size='5' style='text-align:center' value='"+o.to+"'>";
		str+=" if ";	
		str+="<input id='querySel"+num+"' onchange='onEvaEntryChange(this.id)' type='input'size='10' style='text-align:center' value='"+o.query+"'>";
		str+=" params ";	
		sel="";																// Null it
		for (i=1;i<8;++i)													// For each possible p param
			if (o["p"+i])													// If exists
				sel+=o["p"+i]+",";											// Add to string
		if (sel)															// If something there
			sel=sel.substr(0,sel.length-1);									// Lop off last ,
		str+="<input id='pSel"+num+"' onchange='onEvaEntryChange(this.id)' type='input'size='10' value='"+sel+"'>";
		}
	else if (o.Do == "tell") {												// Send event to pane
		if (!o.to)	o.to=1;
		str+=shivaLib.MakeSelect("toSel"+num+"",false,panes,panes[o.to-1]," onchange='onEvaEntryChange(this.id)'",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);
		str+=" send ";														// Send
		if (!o.src && actions.length)	o.src=actions[0];
		str+=shivaLib.MakeSelect("srcSel"+num+"",false,actions,o.src," onchange='onEvaEntryChange(this.id)'");
		str+=" params ";													// Using
		sel="";																// Null it
		for (i=1;i<8;++i)													// For each possible p param
			if (o["p"+i])													// If exists
				sel+=o["p"+i]+",";											// Add to string
		if (sel)															// If something there
			sel=sel.substr(0,sel.length-1);									// Lop off last ,
		str+="<input id='pSel"+num+"' onchange='onEvaEntryChange(this.id)' type='input'size='20' value='"+sel+"'>";
		}
	else if (o.Do == "script") {											// Create script
		if (!o.src)	o.src="";
		sel=o.src.replace(/'/g,"&apos;").replace(/"/g,"&quot;").replace(/&br;/g,"\n");	// Escape ' and "
		str+="<input id='toSel"+num+"' onchange='onEvaEntryChange(this.id)' type='input'size='5' style='text-align:center' value='"+o.to+"'>";
		str+=" using ";														// Using
		str+="<textarea id='srcSel"+num+"' style='vertical-align:bottom;height:16px' rows='1' onchange='onEvaEntryChange(this.id)'>"+sel+"</textarea>";
		}
	else if (o.Do == "call") {												// call script
		if (!o.to && scripts.length)	o.to=scripts[0];
		str+=shivaLib.MakeSelect("toSel"+num+"",false,scripts,o.to," onchange='onEvaEntryChange(this.id)'");
		str+=" with params ";												// Using params
		sel="";																// Null it
		for (i=1;i<8;++i)													// For each possible p param
			if (o["p"+i])													// If exists
				sel+=o["p"+i]+",";											// Add to string
		if (sel)															// If something there
			sel=sel.substr(0,sel.length-1);									// Lop off last ,
		str+="<input id='pSel"+num+"' onchange='onEvaEntryChange(this.id)' type='input'size='20' value='"+sel+"'>";
		}
	str+="&nbsp;&nbsp;&nbsp;<img id='"+num+"' src='trashdot.gif' title='Remove this connection' onclick='onEvaDelete(this.id)'></div>";
	return str;																// Return string
}
	
function onEvaDelete(id)											// ON EVA DELETE
{
	$("#evaLine"+id).remove();											// Kill it
	shivaLib.eva.ondos.splice(id,1);									// Remove from array
	shivaLib.Sound("delete");											// Click
}
	
function onEvaEntryChange(id)										// ON EVA LINE OPTION CHANGE
{
	var i,j,str="";
	var num=$("#"+id).parent()[0].id.substr(7);							// Get row num
	var o=shivaLib.eva.ondos[num];										// Point at ondo
	if (id.match(/fromSel/))		o.from=$("#"+id).val();				// Set value
	else if (id.match(/toSel/))		o.to=$("#"+id).val();				// Set value
	else if (id.match(/DoSel/))		o.Do=$("#"+id).val();				// Set value
	else if (id.match(/onSel/))		o.on=$("#"+id).val();				// Set value
	else if (id.match(/srcSel/))	o.src=$("#"+id).val();				// Set value
	else if (id.match(/querySel/))	o.query=$("#"+id).val();			// Set value
	else if (id.match(/pSel/)) {										// P params
		v=$("#"+id).val().split(",");									// Split by bar
		for (i=0;i<v.length;++i)										// For each part
			o["p"+(i+1)]=v[i];											// Set value
		}
	$("#"+id).parent().html(CreateEntryLine(num));						// Redraw Eva line
	for (i=0;i<shivaLib.eva.ondos.length;++i)	{						// For each line
		o=shivaLib.eva.ondos[i];										// Point at ondo
		str+="on~"+o.on+"`";		str+="Do~"+o.Do+"`";	str+="to~"+o.to+"`";		// Concat string
		str+="from~"+o.from+"`";	str+="query~"+o.query+"`";			// Concat string
		str+="src~"+o.src+"`";
		for (j=1;j<8;++j)												// For each param
			if (o["p"+j] != undefined)									// If something there
				str+="p"+j+"~"+o["p"+j]+"`";							// Add param
		str+="`";														// Line end
		}
	str=str.replace(/'/g,"&apos;").replace(/"/g,"&quot;").replace(/\n/g,"&br;").replace(/\r;/g,"");	// Escape ',",\n,\r
	$("#propInput"+1).val(str);											// Set control
	shivaLib.options.eva=str;											// Set value
}

	
		
</script>
</body></html>